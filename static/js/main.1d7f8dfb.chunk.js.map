{"version":3,"sources":["Board.js","Game.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","value","calculateWinner","squares","winningCombos","i","length","_winningCombos$i","Object","slicedToArray","b","c","Board","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Array","fill","switchTurns","availableMoves","slice","moves","setState","_this2","handleClick","status","winner","renderSquare","React","Component","Game","src_Board","ReactDOM","render","src_Game","document","getElementById"],"mappings":"2MAEA,SAASA,EAAOC,GACd,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASC,QAASL,EAAMK,SACvCL,EAAMM,OAuEb,SAASC,EAAgBC,GAWvB,IAVA,IAAMC,EAAgB,CACpB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAcE,OAAQD,IAAK,KAAAE,EAAAC,OAAAC,EAAA,EAAAD,CAC3BJ,EAAcC,GADa,GACtCR,EADsCU,EAAA,GACnCG,EADmCH,EAAA,GAChCI,EADgCJ,EAAA,GAE7C,GAAIJ,EAAQN,IAAMM,EAAQN,KAAOM,EAAQO,IAAMP,EAAQN,KAAOM,EAAQQ,GACpE,OAAOR,EAAQN,GAGnB,OAAO,KAGMe,kBArFb,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAH,IACjBC,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAI,GAAAM,KAAAH,KAAMpB,KACDwB,MAAQ,CACXhB,QAASiB,MAAM,GAAGC,KAAK,MACvBC,aAAa,EACbC,eAAgB,GALDV,2EASPR,GACV,IAAMF,EAAUY,KAAKI,MAAMhB,QAAQqB,QAC/BC,EAAQV,KAAKI,MAAMI,eAAiB,EACrCrB,EAAgBC,IAAYA,EAAQE,KAGvCF,EAAQE,GAAKU,KAAKI,MAAMG,YAAc,IAAM,IAC5CP,KAAKW,SAAS,CACZvB,QAASA,EACTmB,aAAcP,KAAKI,MAAMG,YACzBC,eAAgBE,0CAIPpB,GAAG,IAAAsB,EAAAZ,KACd,OAAOnB,EAAAC,EAAAC,cAACJ,EAAD,CAAQO,MAAOc,KAAKI,MAAMhB,QAAQE,GAAIL,QAAS,kBAAM2B,EAAKC,YAAYvB,uCAI7E,IACIwB,EADEC,EAAS5B,EAAgBa,KAAKI,MAAMhB,SAU1C,OAPE0B,EADCC,EACQA,EAAS,SACoB,IAA9Bf,KAAKI,MAAMI,eACV,YAEA,iBAAmBR,KAAKI,MAAMG,YAAc,IAAM,KAI3D1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAU8B,GACzBjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZgB,KAAKgB,aAAa,GAClBhB,KAAKgB,aAAa,GAClBhB,KAAKgB,aAAa,IAErBnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZgB,KAAKgB,aAAa,GAClBhB,KAAKgB,aAAa,GAClBhB,KAAKgB,aAAa,IAErBnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZgB,KAAKgB,aAAa,GAClBhB,KAAKgB,aAAa,GAClBhB,KAAKgB,aAAa,IAErBnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,sBA1DYiC,IAAMC,WCUXC,mLAdX,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACqC,EAAD,OAEFvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,oBATSkC,IAAMC,WCEzBG,IAASC,OACPzC,EAAAC,EAAAC,cAACwC,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.1d7f8dfb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  )\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n      switchTurns: true,\r\n      availableMoves: 9,\r\n    }\r\n  }\r\n\r\n  handleClick(i) {\r\n    const squares = this.state.squares.slice()\r\n    let moves = this.state.availableMoves - 1\r\n    if(calculateWinner(squares) || squares[i]) {\r\n      return\r\n    }\r\n    squares[i] = this.state.switchTurns ? 'X' : 'O'\r\n    this.setState({\r\n      squares: squares,\r\n      switchTurns: !this.state.switchTurns,\r\n      availableMoves: moves,\r\n    })\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return <Square value={this.state.squares[i]} onClick={() => this.handleClick(i)}/>\r\n  }\r\n\r\n  render() {\r\n    const winner = calculateWinner(this.state.squares)\r\n    let status\r\n    if(winner) {\r\n      status = winner + ' wins!'\r\n    } else if(this.state.availableMoves === 0) {\r\n      status = 'Tie game!'\r\n    } else {\r\n      status = 'Next player: ' + (this.state.switchTurns ? 'X' : 'O')\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"title\">Tic Tac Toe</div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n        <div className=\"start-button\">\r\n        Start Game\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const winningCombos = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ]\r\n  for (let i = 0; i < winningCombos.length; i++) {\r\n    const [a, b, c] = winningCombos[i]\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a]\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nexport default Board\r\n","import React, { Component } from 'react'\r\nimport './main.css'\r\nimport Board from './Board'\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Game from './Game'\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}